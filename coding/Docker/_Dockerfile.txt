#  -----------------------------------------------------------------  #
#  -------------  Описание структуры файла Dockerfile  -------------  #
#  -----------------------------------------------------------------  #
FROM <IMAGE>		# Определяет базовый образ ОС.
			# Идентична docker run -it IMAGE bash
			# Каждая комманда выполняется в новом слое
-----------------------------------------------------------------------
RUN <COMMAND>		# Запуск комманд при построении образа, по
			 умолчанию через оболочку /bin/sh -c
			# Без оболочки используется массив из частей
			 комманды ['command', 'to', 'run']
			# Для подавления запросов используется флаг -y
			# При использовании инструкции вида:
			 RUN COMMAND_1 \ && COMMAND_2 исполнение ком-
			 манд происходит в одном слое контейнера.
-----------------------------------------------------------------------
CMD			# Запуск комманды в запущенном контейнере в 
			 формате массива ['command', 'to', 'run']
			# Перезагружается с помощью docker run
-----------------------------------------------------------------------
ENTRYPOINT ["APP"]	# Точка входа в приложение APP, парараметры
			 перенаправляются в APP
			# Идентична docker run REPOSITORY/IMAGE APP
-----------------------------------------------------------------------
WORKDIR <PATH>		# Задание рабочей директории для запусков
			 CMD и ENTRYPOINT
-----------------------------------------------------------------------
COPY <SRC> <DEST>	# Скопирует новые файлы из <SRC> и добавит их в 
			# файловую систему контейнера по пути <DEST>
-----------------------------------------------------------------------
ADD <SRC> <DEST>	# Скопирует новые файлы из <SRC> и добавит их в
			 файловую систему контейнера по пути <DEST>
			# Позволяет <SRC> быть URL
			# Если <SRC> архив, то он будет распакован
-----------------------------------------------------------------------
EXPOSE			# Инструкция по использованию портов между
			 контейнерами, приложением
-----------------------------------------------------------------------
USER			# Специфицирует пользователя, под которым должен
			 быть запущен образ. Мы можем указать имя 
			 пользователя или UID и группу или GID.
			# Перезагружается флагом -u при зап. контейнера
-----------------------------------------------------------------------
VOLUME ["/folder",..]	# Инструкция VOLUME добавляет тома в образ
			 — папка в одном или более контейнерах или папка 
			 хоста, проброшенная через Union File System.
			# Тома могут быть расшарены или повторно 
			 использованы между контейнерами. 
-----------------------------------------------------------------------
ONBUILD			# добавляет триггеры в образы. Триггер 
			 исполняется, когда образ используется как
			 базовый для другого образа, например, когда
			 исходный код, нужный для образа еще не доступен,
			 но требует для работы конкретного окружения.
ONBUILD ADD . /app/src
ONBUILD RUN cd /app/src && make
-----------------------------------------------------------------------
ENV			# Установка переменного окружения в образе
			# <REFRESHED_AT YYYY–MM–DD>
-----------------------------------------------------------------------



Это позволяет добавлять и изменять данные без коммита в образ.
VOLUME ["/opt/project"]